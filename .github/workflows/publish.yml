name: Publish to GitHub Packages

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to publish (leave empty for current package.json version)'
        required: false
        type: string
      tag:
        description: 'GitHub Packages dist-tag (latest, beta, alpha, etc.)'
        required: false
        default: 'latest'
        type: choice
        options:
          - latest
          - beta
          - alpha
          - next

jobs:
  publish:
    runs-on: ubuntu-latest
    
    permissions:
      contents: read
      packages: write # Required for GitHub Packages

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Use Node.js 20.x
      uses: actions/setup-node@v4
      with:
        node-version: 20.x
        cache: 'npm'
        registry-url: 'https://npm.pkg.github.com'
        scope: '@gamebeastgg'

    - name: Install dependencies
      run: npm ci

    - name: Run tests
      run: npm run test:ci

    - name: Build project
      run: npm run build

    - name: Update version (if specified)
      if: github.event.inputs.version
      run: npm version ${{ github.event.inputs.version }} --no-git-tag-version

    - name: Publish to GitHub Packages
      run: |
        if [ "${{ github.event.inputs.tag }}" != "" ]; then
          npm publish --tag ${{ github.event.inputs.tag }}
        else
          npm publish
        fi
      env:
        NODE_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Create GitHub release (if manual dispatch)
      if: github.event_name == 'workflow_dispatch' && github.event.inputs.version
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: v${{ github.event.inputs.version }}
        release_name: Release v${{ github.event.inputs.version }}
        body: |
          Changes in this Release
          - Published to GitHub Packages with tag: ${{ github.event.inputs.tag || 'latest' }}
        draft: false
        prerelease: ${{ github.event.inputs.tag != 'latest' }}

  notify:
    needs: publish
    runs-on: ubuntu-latest
    if: always()
    
    steps:
    - name: Notify success
      if: needs.publish.result == 'success'
      run: |
        echo "✅ Successfully published to GitHub Packages!"
        echo "Package: @gamebeastgg/clicksuite"
        echo "Tag: ${{ github.event.inputs.tag || 'latest' }}"
        
    - name: Notify failure
      if: needs.publish.result == 'failure'
      run: |
        echo "❌ Failed to publish to GitHub Packages"
        exit 1